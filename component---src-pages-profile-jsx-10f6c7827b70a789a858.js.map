{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/Edit.js","webpack:///./src/subpages/profile/fixed/gameHistory.jsx","webpack:///./node_modules/@material-ui/icons/esm/ChevronLeft.js","webpack:///./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack:///./src/components/loading.jsx","webpack:///./src/subpages/profile/styles.jsx","webpack:///./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack:///./src/subpages/profile/fixed/firstRoundDialog.jsx","webpack:///./src/subpages/profile/fixed/playerRow.jsx","webpack:///./node_modules/@material-ui/icons/esm/ChevronRight.js","webpack:///./src/subpages/profile/fixed/playerDetails.jsx","webpack:///./src/subpages/profile/floating/biddingDialog.jsx","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack:///./src/subpages/profile/floating/playerRow.jsx","webpack:///./src/subpages/profile/floating/playerDetails.jsx","webpack:///./src/subpages/profile/content.jsx","webpack:///./src/pages/profile.jsx","webpack:///./src/subpages/profile/floating/gameHistory.jsx","webpack:///./src/subpages/calc/simplePlayerStatus.jsx","webpack:///./src/helper/profiles.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_array-fill.js","webpack:///./src/helper/formatList.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.fill.js"],"names":["createElement","d","RoundRow","roundNum","round","players","align","variant","level","playerLevels","active","leader","name","undefined","score","GameHistory","tableSize","profile","component","Paper","size","history","map","i","key","highlight","createSvgIcon","easeOut","t","value","min","max","Math","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","style","_props$thickness","thickness","_props$value","_props$variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","strokeDashoffset","concat","transform","root","capitalize","indeterminate","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","flip","useStyles","makeStyles","loadingGrid","Loading","Grid","container","justify","spacing","alignItems","direction","item","xs","Typography","playerDetailStyles","scoreInput","breakpoints","up","marginBottom","outcomeBox","padding","flexGrow","down","marginTop","scoreContainer","flexBasis","biddingBtnContainer","marginLeft","alignSelf","useDeltaStyles","benefit","fontWeight","cost","victory","Benefit","children","Cost","Victory","Box","Star","fontSize","ml","mt","checked","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","onChange","muiFormControl","useFormControl","controlProps","forEach","cursor","verticalAlign","WebkitTapHighlightColor","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","text","FirstRoundDialog","open","setOpen","playerList","setLeader","useState","winningBidder","setWinningBidder","hasError","setErrorState","handleClose","onClose","DialogTitle","DialogContent","player","Radio","DialogActions","Button","onClick","PlayerRow","isDefender","playerNum","isLeader","TableCell","nextLeader","newLevel","cutFirst","willEnd","PlayerDetails","onNewRound","mobile","useMediaQuery","useTheme","isFirstRound","firstRoundDialogOpen","setFirstRoundDialogOpen","setScore","handleScoreChange","steps","decks","floor","calculateSteps","config","length","newLevels","team0Level","team1Level","newTeam0Lvl","newTeam1Lvl","calculateNewLevels","commonCls","TableContainer","TableRow","TableBody","m","vContainer","hContainer","mr","hExpand","endIcon","Done","newPlayerLevels","victors","filter","_","navigate","ChevronRight","BiddingTableRow","entry","allOptions","bid","onChoice","option","bidder","BiddingDialog","setBid","onLeaderChange","optionsBitfield","n","table","bitmask","playerOptions","j","options","push","calculateBiddingTable","biddingOptions","biddingTable","handleSetChoice","aria-labelledby","rowSpan","colSpan","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","checkedIcon","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","SwitchBase","type","backgroundColor","action","hoverOpacity","leaderState","event","setAsDefender","target","maxedDefenders","delta","maxDefenders","useReducer","state","Array","count","defenders","dispatchDefenders","deckCount","defenderCount","defenderMult","attackerDelta","defenderDelta","scoreSteps","calculateOutcome","won","calculateNewLevel","reduce","partialList","biddingDialogOpen","setBiddingDialogOpen","playerId","clsx","roundNumField","ProfileContent","onUpdate","needsRefresh","setNeedToRefresh","revertRoundNum","setRevertRoundNum","useEffect","location","reload","handleRevert","partnership","React","FloatingPlayerDetails","FixedPlayerDetails","mb","p","FloatingGameHistory","FixedGameHistory","onRevert","TextField","select","MenuItem","mx","redirectTo","window","dest","replace","profileHeaderTextBox","ProfileNameField","contrastText","blueGrey","borderColor","ProfileHeader","onProfileNameChange","nameField","setNameField","startIcon","ChevronLeft","to","IconButton","aria-label","Edit","InputProps","endAdornment","Profile","uuid","setUuid","lastUsed","Date","profileList","profileListDispatch","localStorage","setItem","getItem","profiles","loadProfiles","saveProfiles","handleProfileUpdate","header","headerProps","PresentRoundRow","fixedPlayerNameList","teamId","leaderId","SimplePlayerStatus","formatList","loadLevel","x","Object","fromEntries","JSON","parse","decodeURIComponent","floating","storeLevel","stringify","entries","encodeURIComponent","valueOf","HistoryPropType","PropTypes","exact","number","isRequired","arrayOf","bool","string","instanceOf","oneOf","propTypes","perPlayer","spares","toObject","toAbsoluteIndex","toLength","module","exports","O","this","aLen","arguments","index","end","endPos","array","a","e","$export","P"],"mappings":"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","file":"component---src-pages-profile-jsx-10f6c7827b70a789a858.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import { Paper, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LevelDisplay } from '../../../components/levels'\nimport { PlayerPropType } from '../../../components/player'\nimport { DarkTableHead, HighlightableRow, PaddedTable } from '../../../components/table'\nimport { HistoryPropType, ProfilePropType } from '../../../helper/profiles'\n\nconst RoundRow = ({ roundNum, round, players }) => (<TableRow>\n    <TableCell align=\"center\" variant=\"head\">{roundNum + 1}</TableCell>\n    <TableCell align=\"center\">\n        <LevelDisplay level={round.playerLevels[0].level} active={round.playerLevels[0].active} />\n    </TableCell>\n    <TableCell align=\"center\">\n        <LevelDisplay level={round.playerLevels[1].level} active={round.playerLevels[1].active} />\n    </TableCell>\n    <TableCell>{players[round.leader].name} (Team {round.leader % 2 + 1})</TableCell>\n    <TableCell align=\"center\">{round.score === undefined ? '-' : round.score}</TableCell>\n</TableRow>)\n\nRoundRow.propTypes = {\n    roundNum: PropTypes.number.isRequired,\n    round: HistoryPropType.isRequired,\n    players: PropTypes.arrayOf(PlayerPropType).isRequired,\n}\n\nconst GameHistory = ({ tableSize, profile }) => (\n    <TableContainer component={Paper} variant=\"outlined\">\n        <PaddedTable size={tableSize}>\n            <DarkTableHead>\n                <TableRow>\n                    <TableCell align=\"center\">Round</TableCell>\n                    <TableCell align=\"center\">Team 1</TableCell>\n                    <TableCell align=\"center\">Team 2</TableCell>\n                    <TableCell>Leader</TableCell>\n                    <TableCell align=\"center\">Score</TableCell>\n                </TableRow>\n            </DarkTableHead>\n            <TableBody>\n                {profile.history.map((round, i) => <RoundRow key={i} roundNum={i} round={round} players={profile.players} />)}\n                <HighlightableRow highlight={1}>\n                    <TableCell align=\"center\" variant=\"head\">Now</TableCell>\n                    <TableCell align=\"center\"><LevelDisplay level={profile.players[0].level} active={profile.players[0].active} /></TableCell>\n                    <TableCell align=\"center\"><LevelDisplay level={profile.players[1].level} active={profile.players[1].active} /></TableCell>\n                    <TableCell>{\n                        profile.leader >= 0 ?\n                            `${profile.players[profile.leader].name} (Team ${profile.leader % 2 + 1})` :\n                            ''\n                    }</TableCell>\n                    <TableCell></TableCell>\n                </HighlightableRow>\n            </TableBody>\n        </PaddedTable>\n    </TableContainer>\n)\n\nGameHistory.propTypes = {\n    tableSize: PropTypes.oneOf(['small', 'medium']),\n    profile: ProfilePropType.isRequired,\n}\n\nexport default GameHistory","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    \"static\": {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes[\"static\"]\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles({\n    loadingGrid: {\n        height: '100vh'\n    }\n})\n\nconst Loading = () => {\n    const classes = useStyles()\n\n    return (<Grid container justify=\"center\" spacing={1} alignItems=\"center\" direction=\"column\" className={classes.loadingGrid}>\n        <Grid item xs={12}><CircularProgress color=\"secondary\" /></Grid>\n        <Grid item xs={12}><Typography variant=\"body2\">Loading...</Typography></Grid>\n    </Grid>)\n}\n\nexport default Loading","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, Box } from '@material-ui/core'\nimport { Star } from '@material-ui/icons'\n\nconst playerDetailStyles = makeStyles(theme => ({\n    scoreInput: {\n        width: 150,\n        [theme.breakpoints.up('sm')]: {\n            marginBottom: theme.spacing(2)\n        }\n    },\n    outcomeBox: {\n        padding: theme.spacing(1),\n        flexGrow: 1,\n        [theme.breakpoints.down('xs')]: {\n            marginTop: theme.spacing(2)\n        }\n    },\n    scoreContainer: {\n        flexBasis: 'fit-content'\n    },\n    biddingBtnContainer: {\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: theme.spacing(2),\n            alignSelf: 'center'\n        },\n        [theme.breakpoints.up('sm')]: {\n            alignSelf: 'flex-end'\n        }\n    }\n}))\n\nconst useDeltaStyles = makeStyles(theme => ({\n    benefit: {\n        color: theme.palette.primary.main,\n        fontWeight: 'bold'\n    },\n    cost: {\n        color: theme.palette.secondary.main,\n        fontWeight: 'bold'\n    },\n    victory: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst Benefit = ({ children }) => {\n    const classes = useDeltaStyles()\n    return <span className={classes.benefit}>({children})</span>\n}\n\nBenefit.propTypes = { children: PropTypes.node.isRequired }\n\nconst Cost = ({ children }) => {\n    const classes = useDeltaStyles()\n    return <span className={classes.cost}>({children})</span>\n}\n\nCost.propTypes = { children: PropTypes.node.isRequired }\n\nconst Victory = ({ size }) => {\n    const classes = useDeltaStyles()\n    return <Box className={classes.victory}><Star fontSize={size || 'small'} /><Box component=\"span\" ml={0.25} mt={0.25}>Victory</Box></Box>\n}\n\nVictory.propTypes = { size: PropTypes.oneOf(['small', 'medium']) }\n\nexport { playerDetailStyles, Benefit, Cost, Victory }\n","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ResponsiveDialog from '../../../components/responsiveDialog'\nimport { DialogTitle, DialogContent, Typography, Grid, FormControlLabel, Radio, DialogActions, Button, Box } from '@material-ui/core'\nimport { PlayerPropType } from '../../../components/player'\nimport { useState } from 'react'\n\nconst FirstRoundDialog = ({ open, setOpen, playerList, setLeader }) => {\n    const [winningBidder, setWinningBidder] = useState()\n    const [hasError, setErrorState] = useState(false)\n\n    const handleClose = () => {\n        if (winningBidder === undefined) {\n            setErrorState(true)\n            return\n        }\n        setOpen(false)\n        setLeader(winningBidder)\n    }\n\n    return (<ResponsiveDialog open={open} onClose={handleClose}>\n        <DialogTitle>Set winning bidder of first round</DialogTitle>\n        <DialogContent>\n            <Typography variant=\"body2\">The winning bidder of the first round is the bidder. Select the winning bidder below:</Typography>\n            <Box mt={2}><Grid container spacing={1}>\n                <Grid item xs={6}><Typography variant=\"h6\">Team 1</Typography></Grid>\n                <Grid item xs={6}><Typography variant=\"h6\">Team 2</Typography></Grid>\n                {playerList.map((player, i) => {\n                    const handleChange = () => {\n                        setWinningBidder(i)\n                        setErrorState(false)\n                    }\n                    return (<Grid item key={i} xs={6}>\n                        <FormControlLabel\n                            control={<Radio />}\n                            label={player.name}\n                            checked={winningBidder === i}\n                            value={i}\n                            onChange={handleChange}\n                        />\n                    </Grid>)\n                })}\n            </Grid></Box>\n            {hasError && <Typography variant=\"body2\" color=\"error\">You must select the winning bidder.</Typography>}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" disabled={winningBidder === undefined} onClick={handleClose}>\n                Continue\n            </Button>\n        </DialogActions>\n    </ResponsiveDialog>)\n}\n\nFirstRoundDialog.propTypes = {\n    open: PropTypes.bool,\n    setOpen: PropTypes.func.isRequired,\n    playerList: PropTypes.arrayOf(PlayerPropType.isRequired).isRequired,\n    setLeader: PropTypes.func.isRequired\n}\n\nexport default FirstRoundDialog","import { TableCell } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LevelDisplay } from '../../../components/levels'\nimport { PlayerPropType } from '../../../components/player'\nimport { HighlightableRow } from '../../../components/table'\n\nconst PlayerRow = props => {\n    const isDefender = props.playerNum % 2 === props.leader % 2\n    const isLeader = props.playerNum === props.leader\n    return (<HighlightableRow highlight={isLeader ? 1 : 0}>\n        <TableCell>{props.player.name} (Team {props.playerNum % 2 + 1})</TableCell>\n        <TableCell align=\"center\">\n            <LevelDisplay level={props.level} active={isDefender} />\n        </TableCell>\n        <TableCell align=\"center\">\n            {isLeader ? 'Leader' : (\n                isDefender ? 'Defender' : 'Attacker'\n            )}\n        </TableCell>\n        <TableCell>\n            {props.nextLeader !== undefined && (<>\n                <LevelDisplay level={props.newLevel} active={props.playerNum % 2 === props.nextLeader % 2} />\n                {props.playerNum === props.cutFirst && !props.willEnd && ' (Cut Deck)'}\n                {props.playerNum === props.nextLeader && !props.willEnd && ' (Leader)'}\n            </>)}\n        </TableCell>\n    </HighlightableRow>)\n}\n\nPlayerRow.propTypes = {\n    player: PlayerPropType.isRequired,\n    playerNum: PropTypes.number.isRequired,\n    leader: PropTypes.number.isRequired,\n    level: PropTypes.number.isRequired,\n    newLevel: PropTypes.number,\n    nextLeader: PropTypes.number,\n    cutFirst: PropTypes.number,\n    willEnd: PropTypes.bool.isRequired\n}\n\nexport default PlayerRow","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');","import { Box, Button, Paper, TableBody, TableCell, TableContainer, TableRow, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport commonCls from '../../../components/commonClasses'\nimport ScoreInput from '../../../components/inputs/scoreInput'\nimport { DarkTableHead, PaddedTable } from '../../../components/table'\nimport { ProfilePropType } from '../../../helper/profiles'\nimport { Benefit, playerDetailStyles } from '../styles'\nimport FirstRoundDialog from './firstRoundDialog'\nimport PlayerRow from './playerRow'\nimport { Done, ChevronRight } from '@material-ui/icons'\nimport { navigate } from 'gatsby'\n\nconst calculateSteps = (score, decks) => {\n    if (score === undefined || score === null) return undefined\n    if (score <= 0) return 0\n    return Math.min(Math.floor(score / 20 / decks), 5) + 1\n}\n\nconst calculateNewLevels = (team0Level, team1Level, steps, leader) => {\n    let newTeam0Lvl, newTeam1Lvl\n    if (leader % 2 === 0) {\n        newTeam0Lvl = team0Level + Math.max(3 - steps, 0)\n        newTeam1Lvl = team1Level + Math.max(steps - 3, 0)\n    } else {\n        newTeam0Lvl = team0Level + Math.max(steps - 3, 0)\n        newTeam1Lvl = team1Level + Math.max(3 - steps, 0)\n    }\n\n    if (team0Level < 14 && newTeam0Lvl > 14) newTeam0Lvl = 14\n    if (team1Level < 14 && newTeam1Lvl > 14) newTeam1Lvl = 14\n\n    return [newTeam0Lvl, newTeam1Lvl]\n}\n\nconst PlayerDetails = ({ profile, tableSize, onNewRound, ...props }) => {\n    const mobile = useMediaQuery(useTheme().breakpoints.down('xs'))\n\n    const [leader, setLeader] = useState(profile.leader)\n\n    const isFirstRound = profile.leader === -1\n    const [firstRoundDialogOpen, setFirstRoundDialogOpen] = useState(isFirstRound)\n\n    const [score, setScore] = useState(undefined)\n    const handleScoreChange = setScore\n    const steps = calculateSteps(score, profile.config.decks)\n\n    const nextLeader = steps === undefined ? undefined : ((leader + (steps < 3 ? 2 : 1)) % profile.players.length)\n    const cutFirst = steps === undefined ? undefined : ((leader + (steps < 3 ? 1 : 0)) % profile.players.length)\n\n    const newLevels = calculateNewLevels(profile.players[0].level, profile.players[1].level, steps, leader)\n    const willEnd = newLevels[0] > 14 || newLevels[1] > 14\n\n    const classes = { ...commonCls(), ...playerDetailStyles() }\n\n    const handleScoreSave = () => {\n        onNewRound({\n            score, leader, nextLeader,\n            playerLevels: profile.players.map(player => ({ level: player.level, active: player.active })),\n            newPlayerLevels: profile.players.map((player, i) => ({ level: newLevels[i % 2], active: nextLeader % 2 === i % 2 }))\n        })\n        setScore(null)\n        setLeader(nextLeader)\n    }\n\n    const handleGameFinish = () => {\n        onNewRound({\n            score, leader, nextLeader: -1,\n            playerLevels: profile.players.map(player => ({ level: player.level, active: player.active })),\n            newPlayerLevels: profile.players.map((player, i) => ({ level: newLevels[i % 2], active: nextLeader % 2 === i % 2 })),\n            victors: profile.players.filter((player, i) => newLevels[i % 2] > 14).map((_, i) => i)\n        })\n        navigate('/calc')\n    }\n\n    return (<Box {...props}>\n        <TableContainer component={Paper}>\n            <PaddedTable size={tableSize}>\n                <DarkTableHead>\n                    <TableRow>\n                        <TableCell>Player</TableCell>\n                        <TableCell align=\"center\">Level</TableCell>\n                        <TableCell align=\"center\">Position</TableCell>\n                        <TableCell>Next Game</TableCell>\n                    </TableRow>\n                </DarkTableHead>\n                <TableBody>\n                    {profile.players.map((player, playerNum) => (\n                        <PlayerRow key={playerNum}\n                            player={player} playerNum={playerNum}\n                            leader={leader}\n                            level={profile.players[playerNum % 2].level}\n                            newLevel={newLevels[playerNum % 2]}\n                            nextLeader={nextLeader}\n                            cutFirst={cutFirst}\n                            willEnd={willEnd}\n                        />\n                    ))}\n                </TableBody>\n            </PaddedTable>\n            <Box m={2} className={mobile ? classes.vContainer : classes.hContainer}>\n                <Box mr={2} className={mobile ? classes.hContainer : classes.vContainer}>\n                    <ScoreInput variant=\"filled\" size={tableSize} className={classes.scoreInput}\n                        label=\"Score\" value={score} onChange={handleScoreChange}\n                    />\n                    {isFirstRound && <Box className={classes.biddingBtnContainer}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setFirstRoundDialogOpen(true)}>Bidding</Button>\n                    </Box>}\n                </Box>\n                {steps !== undefined && (<Paper variant=\"outlined\" className={classes.outcomeBox}>\n                    <Typography variant=\"h6\">Round Outcome</Typography>\n                    {steps < 3 ? (<>\n                        <Typography variant=\"body2\">Score {'<'}{profile.config.decks * 40} points <Benefit>Defenders +1 level</Benefit></Typography>\n                        {steps < 2 &&\n                            <Typography variant=\"body2\">Score {'<'}{profile.config.decks * 20} points <Benefit>Defenders +1 level</Benefit></Typography>\n                        }\n                        {steps < 1 &&\n                            <Typography variant=\"body2\">Score 0 points <Benefit>Defenders +1 level</Benefit></Typography>\n                        }\n                    </>) : (<>\n                        <Typography variant=\"body2\">Score ≥{profile.config.decks * 40} points <Benefit>Attackers take over as defenders</Benefit></Typography>\n                        {steps > 3 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 60} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                        {steps > 4 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 80} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                        {steps > 5 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 100} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                    </>)\n                    }\n                    <Box className={classes.hContainer} mt={1}>\n                        <Box className={classes.hExpand} />\n                        {(newLevels[0] > 14 || newLevels[1] > 14) ?\n                            (<Button color=\"primary\" variant=\"contained\" endIcon={<Done />}\n                                onClick={handleGameFinish}\n                            >Finish Game</Button>)\n                            : (<Button color=\"primary\" variant=\"contained\" endIcon={<ChevronRight />}\n                                onClick={handleScoreSave}\n                            >Next Round</Button>)\n                        }\n                    </Box>\n                </Paper>)}\n            </Box>\n        </TableContainer>\n        <FirstRoundDialog\n            open={firstRoundDialogOpen} setOpen={setFirstRoundDialogOpen}\n            playerList={profile.players}\n            setLeader={setLeader}\n        />\n    </Box>)\n}\n\nPlayerDetails.propTypes = {\n    profile: ProfilePropType.isRequired,\n    tableSize: PropTypes.oneOf(['small', 'medium']),\n    onNewRound: PropTypes.func.isRequired\n}\n\nexport default PlayerDetails","import { Button, DialogActions, DialogContent, DialogTitle, FormControlLabel, Paper, Radio, TableBody, TableCell, TableContainer, TableRow, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LevelDisplay } from '../../../components/levels'\nimport { PlayerPropType } from '../../../components/player'\nimport ResponsiveDialog from '../../../components/responsiveDialog'\nimport { DarkTableHead, PaddedTable } from '../../../components/table'\n\nconst calculateBiddingTable = playerList => {\n    let optionsBitfield = 0b0\n    const n = playerList.length\n\n    const table = playerList.map((player, i) => {\n        if (player.active) {\n            let bitmask = 1 << player.level\n            optionsBitfield = (optionsBitfield & ~bitmask) ^ bitmask\n            return { [player.level]: i }\n        } else {\n            const playerOptions = {}\n            for (let j = (i + 1) % n; j != i; j = (j + 1) % n) {\n                if (playerList[j].active && playerOptions[playerList[j].level] === undefined)\n                    playerOptions[playerList[j].level] = j\n            }\n            return playerOptions\n        }\n    })\n\n    const options = []\n    optionsBitfield >>= 2\n    for (let i = 2; optionsBitfield != 0b0; i++) {\n        if (optionsBitfield & 0b1) options.push(i)\n        optionsBitfield >>= 1\n    }\n\n    return [options, table]\n}\n\nconst BiddingTableRow = ({ playerNum, playerList, entry, allOptions, size, bid, onChoice }) => {\n    const player = playerList[playerNum]\n    return (<TableRow>\n        <TableCell>{player.name}</TableCell>\n        <TableCell align=\"center\"><LevelDisplay player={player} /></TableCell>\n        {allOptions.map((option, i) => {\n            const player = entry[option]\n            if (player === undefined) return <TableCell key={i} align=\"center\">-</TableCell>\n            return (<TableCell key={i}><FormControlLabel\n                control={<Radio size={size} />}\n                label={playerList[entry[option]].name}\n                checked={(bid.bidder == playerNum && bid.bid === option) || false}\n                value={{ bidder: playerNum, bid: option }}\n                onChange={() => onChoice(playerNum, option)}\n            /></TableCell>)\n        })}\n    </TableRow>)\n}\n\nBiddingTableRow.propTypes = {\n    playerNum: PropTypes.number.isRequired,\n    playerList: PropTypes.arrayOf(PlayerPropType.isRequired),\n    entry: PropTypes.object.isRequired,\n    allOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n    size: PropTypes.oneOf(['small', 'medium']),\n    bid: PropTypes.exact({\n        bidder: PropTypes.number,\n        bid: PropTypes.number\n    }).isRequired,\n    onChoice: PropTypes.func.isRequired\n}\n\nconst BiddingDialog = ({ open, setOpen, bid, setBid, playerList, onLeaderChange }) => {\n    const handleClose = () => setOpen(false)\n    const [biddingOptions, biddingTable] = calculateBiddingTable(playerList)\n\n    const handleSetChoice = (bidder, bid) => {\n        setBid({ bidder, bid })\n        onLeaderChange(biddingTable[bidder][bid])\n    }\n\n    return (<ResponsiveDialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle>Bidding</DialogTitle>\n        <DialogContent>\n            <Typography variant=\"body2\">The following table shows the options each player may bid, and the resultant leader. Tap on the corresponding option to select the bidder and the bid.</Typography>\n            <TableContainer component={Paper} variant=\"outlined\">\n                <PaddedTable size=\"small\">\n                    <DarkTableHead>\n                        <TableRow>\n                            <TableCell rowSpan={2}>Bidder</TableCell>\n                            <TableCell rowSpan={2} align=\"center\">Level</TableCell>\n                            <TableCell colSpan={biddingOptions.length} align=\"center\">Leader by Bid</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            {biddingOptions.map((option, i) => <TableCell key={i} align=\"center\"><LevelDisplay level={option} /></TableCell>)}\n                        </TableRow>\n                    </DarkTableHead>\n                    <TableBody>\n                        {biddingTable.map((entry, i) => (\n                            <BiddingTableRow key={i} size=\"small\"\n                                playerList={playerList} playerNum={i}\n                                entry={entry} allOptions={biddingOptions}\n                                bid={bid} onChoice={handleSetChoice}\n                            />)\n                        )}\n                    </TableBody>\n                </PaddedTable>\n            </TableContainer>\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>Close</Button>\n        </DialogActions>\n    </ResponsiveDialog>)\n}\n\nBiddingDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    setOpen: PropTypes.func.isRequired,\n    bid: BiddingTableRow.propTypes.bid,\n    setBid: PropTypes.func.isRequired,\n    playerList: PropTypes.arrayOf(PlayerPropType).isRequired,\n    onLeaderChange: PropTypes.func.isRequired\n}\n\nexport default BiddingDialog","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import { Checkbox, TableCell, TableRow } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LevelDisplay } from '../../../components/levels'\nimport { PlayerPropType } from '../../../components/player'\nimport { Benefit, Cost, Victory } from '../styles'\nimport { HighlightableRow } from '../../../components/table'\n\nconst PlayerRow = props => {\n    const handleDefenderChange = event => props.setAsDefender(event.target.checked)\n\n    return (<HighlightableRow highlight={props.isLeader ? 1 : 0}>\n        <TableCell>{props.player.name}</TableCell>\n        <TableCell align=\"center\"><LevelDisplay player={props.player} /></TableCell>\n        <TableCell align=\"center\">\n            {props.leaderState !== 'not set' &&\n                <Checkbox color=\"secondary\" size={props.size}\n                    checked={props.isDefender} onChange={handleDefenderChange}\n                    disabled={props.isLeader || (props.maxedDefenders && !props.isDefender)}\n                />}\n        </TableCell>\n        <TableCell>\n            {props.delta === undefined ? '' : (props.newLevel.level > 14 ? <Victory size={props.size} /> : <>\n                <LevelDisplay level={props.newLevel.level} active={props.newLevel.active} />{' '}\n                {props.delta > 1 && <Benefit>{props.player.active ? `+${props.delta}` : `↑${props.delta - 1}`}</Benefit>}\n                {props.delta === 1 && <Benefit>{props.player.active ? '+1' : '↑'}</Benefit>}\n                {props.delta === 0 && props.player.active && <Cost>↓</Cost>}\n            </>)}\n        </TableCell>\n    </HighlightableRow>)\n}\n\n\nPlayerRow.propTypes = {\n    size: PropTypes.oneOf(['small', 'medium']).isRequired,\n    player: PlayerPropType.isRequired,\n    leaderState: PropTypes.oneOf(['preset', 'set', 'not set']),\n    isLeader: PropTypes.bool.isRequired,\n    isDefender: PropTypes.bool.isRequired,\n    setAsDefender: PropTypes.func.isRequired,\n    maxedDefenders: PropTypes.bool.isRequired,\n    newLevel: PropTypes.exact({ level: PropTypes.number.isRequired, active: PropTypes.bool.isRequired }),\n    delta: PropTypes.number\n}\n\nexport default PlayerRow\n\n","import { Box, Button, Paper, TableBody, TableCell, TableContainer, TableRow, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport { ChevronRight, Done } from '@material-ui/icons'\nimport { navigate } from '@reach/router'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport React, { useReducer, useState } from 'react'\nimport commonCls from '../../../components/commonClasses'\nimport ScoreInput from '../../../components/inputs/scoreInput'\nimport { DarkTableHead, PaddedTable } from '../../../components/table'\nimport { ProfilePropType } from '../../../helper/profiles'\nimport { Benefit, Cost, playerDetailStyles } from '../styles'\nimport BiddingDialog from './biddingDialog'\nimport PlayerRow from './playerRow'\n\nconst calculateOutcome = (score, deckCount, maxDefenders, defenderCount) => {\n    if (score === undefined || score === null)\n        return { defenderMult: undefined, attackerDelta: undefined, defenderDelta: undefined }\n\n    const scoreSteps = (score <= 0) ? 0 : Math.min(Math.floor(score / 20 / deckCount) + 1, 6)\n    const defenderMult = maxDefenders - defenderCount + 1\n\n    return {\n        defenderMult,\n        attackerDelta: Math.max(scoreSteps - 2, 0),\n        defenderDelta: Math.max(3 - scoreSteps, 0) * defenderMult\n    }\n}\n\nconst calculateNewLevel = (player, delta) => {\n    const won = delta > 0\n    let level = player.level + (won ? (delta - (player.active ? 0 : 1)) : 0)\n\n    if (player.level < 14 && level > 14) level = 14\n    return { active: won, level }\n}\n\nconst getVictors = playerList => playerList.reduce((partialList, player, i) => {\n    if (player.level > 14) partialList.push(i)\n    return partialList\n}, [])\n\n\nconst PlayerDetails = ({ profile, onNewRound, tableSize, ...props }) => {\n\n    const xs = useMediaQuery(useTheme().breakpoints.down('xs'))\n    const [leader, setLeader] = useState(profile.leader)\n\n    const maxDefenders = Math.floor(profile.players.length / 2)\n    const [defenders, dispatchDefenders] = useReducer(\n        (state, action) => {\n            switch (action.type) {\n                case 'init': {\n                    const players = new Array(profile.players.length).fill(false)\n                    players[action.key] = true\n                    return { players, count: 1 }\n                }\n                case 'update': {\n                    const players = state.players\n                    players[action.key] = action.value\n                    return { players, count: state.count + (action.value ? 1 : -1) }\n                }\n                case 'clear':\n                    return { players: new Array(profile.players.length).fill(false), count: 0 }\n                default:\n                    throw `unknown dispatcher action.type ${action.type}`\n            }\n        },\n        { players: new Array(profile.players.length).fill(false), count: 0 }\n    )\n\n    const handleLeaderChange = playerId => {\n        setLeader(playerId)\n        dispatchDefenders({ type: 'init', key: playerId })\n    }\n\n    const setAsDefenderFunc = playerId => function (isDefender) {\n        dispatchDefenders({ type: 'update', key: playerId, value: isDefender })\n    }\n\n    const leaderState = profile.leader === -1 ? (leader === -1 ? 'not set' : 'set') : 'preset'\n\n    const [score, setScore] = useState(undefined)\n    const handleScoreChange = score => {\n        setScore(score)\n    }\n\n    const { defenderMult, attackerDelta, defenderDelta } =\n        calculateOutcome(score, profile.config.decks, maxDefenders, defenders.count)\n\n    const newLevels = profile.players.map(\n        (player, i) => calculateNewLevel(player, defenders.players[i] ? defenderDelta : attackerDelta)\n    )\n\n    const victors = getVictors(newLevels)\n\n    const [biddingDialogOpen, setBiddingDialogOpen] = useState(false)\n    const [bid, setBid] = useState({})\n\n    const handleScoreSave = () => {\n        onNewRound({\n            score, leader, nextLeader: -1,\n            playerLevels: profile.players.map(player => ({ level: player.level, active: player.active })),\n            newPlayerLevels: newLevels\n        })\n        setScore(null)\n        setLeader(-1)\n        dispatchDefenders({ type: 'clear' })\n        setBid({})\n    }\n\n    const handleGameFinish = () => {\n        onNewRound({\n            score, leader, nextLeader: -1,\n            playerLevels: profile.players.map(player => ({ level: player.level, active: player.active })),\n            newPlayerLevels: newLevels,\n            victors\n        })\n\n        navigate('/calc')\n    }\n\n    const classes = { ...commonCls(), ...playerDetailStyles({ leader }) }\n\n    return (<Box {...props}>\n        <TableContainer component={Paper}>\n            <PaddedTable size={tableSize}>\n                <DarkTableHead>\n                    <TableRow>\n                        <TableCell>Player</TableCell>\n                        <TableCell align=\"center\">Level</TableCell>\n                        <TableCell align=\"center\"><Box className={classes.vContainer}>\n                            <Box>Defender</Box>\n                            <Box mt={-1}><Typography variant=\"caption\">(max {maxDefenders})</Typography></Box>\n                        </Box></TableCell>\n                        <TableCell>Next Game</TableCell>\n                    </TableRow>\n                </DarkTableHead>\n                <TableBody>\n                    {profile.players.map((player, i) =>\n                        <PlayerRow key={i} size={tableSize}\n                            player={player}\n                            isLeader={leader === i}\n                            isDefender={defenders.players[i]} setAsDefender={setAsDefenderFunc(i)}\n                            leaderState={leaderState} maxedDefenders={defenders.count === maxDefenders}\n                            newLevel={newLevels[i]} delta={defenders.players[i] ? defenderDelta : attackerDelta}\n                        />)}\n                </TableBody>\n            </PaddedTable>\n            <Box m={2} className={xs ? classes.vContainer : classes.hContainer}>\n                <Box mr={2} className={clsx(xs ? classes.hContainer : classes.vContainer, classes.scoreContainer)}>\n                    {leader !== -1 && (<ScoreInput variant=\"filled\" size={tableSize} className={classes.scoreInput}\n                        label=\"Score\"\n                        value={score} onChange={handleScoreChange}\n                    />)}\n                    <Box className={classes.biddingBtnContainer}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setBiddingDialogOpen(true)}>Bidding</Button>\n                    </Box>\n                </Box>\n                {defenderMult && defenders.count > 0 && (<Paper variant=\"outlined\" className={classes.outcomeBox}>\n                    <Typography variant=\"h6\">Round Outcome</Typography>\n                    {defenderDelta > 0 && <>\n                        <Typography variant=\"body2\">Score {'<'}{profile.config.decks * 40} points <Benefit>Defenders win, +1 level</Benefit> <Cost>Attackers inactive</Cost></Typography>\n                        {defenderDelta > defenderMult &&\n                            <Typography variant=\"body2\">Score {'<'}{profile.config.decks * 20} points <Benefit>Defenders +1 level</Benefit></Typography>\n                        }\n                        {score <= 0 &&\n                            <Typography variant=\"body2\">Score 0 points <Benefit>Defenders +1 level</Benefit></Typography>\n                        }\n                        {defenderMult == 2 &&\n                            <Typography variant=\"body2\">1 less defender than usual <Benefit>Level gain ×2</Benefit></Typography>\n                        }\n                        {defenderMult > 2 &&\n                            <Typography variant=\"body2\">{defenderMult - 1} less defenders than usual <Benefit>Level gain ×{defenderMult}</Benefit></Typography>\n                        }\n                        <Typography variant=\"body2\">Inactive defenders become active <Cost>-1 level gain if inactive</Cost></Typography>\n                    </>}\n                    {attackerDelta > 0 && <>\n                        <Typography variant=\"body2\">Score ≥{profile.config.decks * 40} points <Benefit>Attackers win, +1 level</Benefit> <Cost>Defenders inactive</Cost></Typography>\n                        {attackerDelta > 1 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 60} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                        {attackerDelta > 2 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 80} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                        {attackerDelta > 3 &&\n                            <Typography variant=\"body2\">Score ≥{profile.config.decks * 100} points <Benefit>Attackers +1 level</Benefit></Typography>\n                        }\n                        <Typography variant=\"body2\">Inactive attackers become active <Cost>-1 level gain if inactive</Cost></Typography>\n                    </>}\n                    <Box className={classes.hContainer} mt={1}>\n                        <Box className={classes.hExpand} />\n                        {victors.length ?\n                            (<Button color=\"primary\" variant=\"contained\" endIcon={<Done />}\n                                onClick={handleGameFinish}\n                            >Finish Game</Button>)\n                            : (<Button color=\"primary\" variant=\"contained\" endIcon={<ChevronRight />}\n                                onClick={handleScoreSave}\n                            >Next Round</Button>)\n                        }\n                    </Box>\n                </Paper>)\n                }\n            </Box>\n        </TableContainer>\n        <BiddingDialog\n            open={biddingDialogOpen} setOpen={setBiddingDialogOpen}\n            bid={bid} setBid={setBid}\n            playerList={profile.players}\n            onLeaderChange={handleLeaderChange}\n        />\n    </Box>)\n}\n\nPlayerDetails.propTypes = {\n    profile: ProfilePropType,\n    onNewRound: PropTypes.func.isRequired,\n    tableSize: PropTypes.oneOf(['small', 'medium'])\n}\n\nexport default PlayerDetails","import { Box, Button, makeStyles, MenuItem, Paper, TextField, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport commonCls from '../../components/commonClasses'\nimport Loading from '../../components/loading'\nimport { ProfilePropType } from '../../helper/profiles'\nimport FixedGameHistory from './fixed/gameHistory'\nimport FixedPlayerDetails from './fixed/playerDetails'\nimport FloatingGameHistory from './floating/gameHistory'\nimport FloatingPlayerDetails from './floating/playerDetails'\n\nconst useStyles = makeStyles({\n    roundNumField: { width: 135 }\n})\n\nconst ProfileContent = ({ profile, onUpdate }) => {\n    const classes = { ...commonCls(), ...useStyles() }\n\n    const [needsRefresh, setNeedToRefresh] = useState(false)\n    const [revertRoundNum, setRevertRoundNum] = useState(profile.history.length ? profile.history.length - 1 : '')\n\n    useEffect(() => {\n        if (needsRefresh) {\n            setNeedToRefresh(false)\n            location.reload(true)\n        }\n    }, [needsRefresh])\n\n    const handleRevert = () => {\n        setRevertRoundNum(revertRoundNum ? revertRoundNum - 1 : '')\n        onUpdate({\n            ...profile,\n            players: profile.players.map((player, i) => (\n                { name: player.name, ...profile.history[revertRoundNum].playerLevels[i] }\n            )),\n            leader: (profile.partnership === 'floating' || revertRoundNum === 0) ? -1 : profile.history[revertRoundNum].leader,\n            victors: [],\n            history: profile.history.filter((_, i) => i < revertRoundNum)\n        })\n        setNeedToRefresh(true)\n    }\n\n    const handleNewRound = ({ score, leader, nextLeader, playerLevels, newPlayerLevels, victors }) => {\n        onUpdate({\n            ...profile,\n            players: profile.players.map((player, i) => ({\n                name: player.name, ...newPlayerLevels[i]\n            })),\n            victors: victors || profile.victors,\n            leader: nextLeader,\n            history: [...profile.history, { score, leader, playerLevels }]\n        })\n\n        setRevertRoundNum(profile.history.length)\n    }\n\n    return needsRefresh ? <Loading /> : (<>\n        {profile.victors.length > 0 || React.createElement(\n            profile.partnership === 'floating' ? FloatingPlayerDetails : FixedPlayerDetails,\n            { profile, onNewRound: handleNewRound, mb: 2, tableSize: 'small' }\n        )}\n        <Paper><Box p={2}>\n            <Typography variant=\"h5\">Game History</Typography>\n            {React.createElement(\n                profile.partnership === 'floating' ? FloatingGameHistory : FixedGameHistory,\n                { profile, tableSize: 'small', onRevert: handleRevert }\n            )}\n            <Box className={classes.hContainer} mt={2}>\n                <Box className={classes.hExpand} />\n                <TextField select variant=\"outlined\" size=\"small\" className={classes.roundNumField}\n                    disabled={revertRoundNum === ''}\n                    label=\"Round No.\"\n                    value={revertRoundNum} onChange={event => setRevertRoundNum(event.target.value)}\n                >{[...new Array(profile.history.length)].map((_, i) => (\n                    <MenuItem key={i} value={i}>{i + 1}</MenuItem>\n                ))}</TextField>\n                <Box mx={1} />\n                <Button variant=\"outlined\" onClick={handleRevert} disabled={revertRoundNum === ''}>Revert</Button>\n            </Box>\n        </Box></Paper>\n    </>)\n}\n\nProfileContent.propTypes = {\n    profile: ProfilePropType.isRequired,\n    onUpdate: PropTypes.func.isRequired\n}\n\nexport default ProfileContent","import { Box, makeStyles, Typography, IconButton, TextField, withStyles } from '@material-ui/core'\nimport { ChevronLeft, Edit, Done } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useReducer, useState } from 'react'\nimport Header from '../components/header'\nimport Layout from '../components/layout'\nimport { ButtonLink } from '../components/links'\nimport Loading from '../components/loading'\nimport { loadProfiles, ProfilePropType, saveProfiles } from '../helper/profiles'\nimport ProfileContent from '../subpages/profile/content'\nimport { blueGrey } from '@material-ui/core/colors'\n\nconst activeProfileStorageKey = 'shengji-helper-active'\nconst redirectTo = (window, dest) => window.location.replace(dest)\n\nconst useStyles = makeStyles({\n    profileHeaderTextBox: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    }\n})\n\nconst ProfileNameField = withStyles(theme => ({\n    root: {\n        '& input': {\n            color: theme.palette.primary.contrastText\n        },\n        '& label, & label.Mui-focused': {\n            color: blueGrey[300]\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset, &:hover fieldset, &.Mui-focused fieldset': {\n                borderColor: blueGrey[700]\n            }\n        },\n        '& button': {\n            color: blueGrey[300]\n        }\n    }\n}))(TextField)\n\nconst ProfileHeader = ({ profile, onProfileNameChange, ...props }) => {\n    const classes = useStyles()\n\n    const [nameField, setNameField] = useState(null)\n\n    const handleStartEdit = () => setNameField(profile.name)\n    const handleEndEdit = () => {\n        onProfileNameChange(nameField)\n        setNameField(null)\n    }\n    const handleNameChange = event => setNameField(event.target.value)\n\n    return (<Header {...props}>\n        <ButtonLink color=\"inherit\" startIcon={<ChevronLeft />} to=\"/calc\">Back</ButtonLink>\n        {profile && <Box ml={3} className={classes.profileHeaderTextBox}>\n            {nameField === null ? (<>\n                <Typography variant=\"h6\">{profile.name} </Typography>\n                <IconButton aria-label=\"edit\" color=\"inherit\" onClick={handleStartEdit}><Edit /></IconButton>\n            </>) : (<ProfileNameField variant=\"outlined\" size=\"small\" label=\"Profile Name\" value={nameField} InputProps={{\n                endAdornment: (<IconButton size=\"small\" color=\"inherit\" onClick={handleEndEdit}><Done size=\"inherit\" /></IconButton>)\n            }} onChange={handleNameChange} />)}\n            <Box ml={1} />\n            <Typography variant=\"body2\">({profile.config.decks} decks, {profile.players.length} players)</Typography>\n        </Box>}\n    </Header>)\n}\n\n\nProfileHeader.propTypes = {\n    profile: ProfilePropType,\n    onProfileNameChange: PropTypes.func.isRequired\n}\n\nconst Profile = ({ location }) => {\n    const [uuid, setUuid] = useState()\n    const [profileList, profileListDispatch] = useReducer((state, action) => {\n        switch (action.type) {\n            case 'init':\n                return action.value\n            case 'update':\n                return { ...state, [uuid]: { ...action.value, lastUsed: new Date() } }\n            default:\n                throw `unknown profileListDispatch action.type ${action.type}`\n        }\n    }, {})\n\n    useEffect(() => {\n        if (location && location.state && location.state.uuid)\n            window.localStorage.setItem(activeProfileStorageKey, location.state.uuid)\n\n        const uuid = window.localStorage.getItem(activeProfileStorageKey)\n        if (!uuid) {\n            redirectTo(window, '/calc')\n            return\n        }\n        setUuid(uuid)\n\n        const profiles = loadProfiles(window)\n        if (!profiles[uuid]) {\n            redirectTo(window, '/calc')\n            return\n        }\n        profileListDispatch({ type: 'init', value: profiles })\n    }, [])\n\n    useEffect(() => {\n        saveProfiles(profileList, window)\n    }, [profileList])\n\n    const handleProfileUpdate = profile => profileListDispatch({\n        type: 'update',\n        value: profile\n    })\n\n    const handleProfileNameChange = name => handleProfileUpdate({\n        ...profileList[uuid], name\n    })\n\n    return (<Layout\n        header={ProfileHeader} headerProps={{\n            profile: profileList && profileList[uuid],\n            onProfileNameChange: handleProfileNameChange\n        }}>\n        {(profileList && profileList[uuid]) ?\n            <ProfileContent profile={profileList[uuid]} onUpdate={handleProfileUpdate} /> : <Loading />}\n    </Layout>)\n}\n\nProfile.propTypes = {\n    location: PropTypes.object\n}\n\nexport default Profile","import { Button, Paper, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LevelDisplay } from '../../../components/levels'\nimport { PlayerPropType } from '../../../components/player'\nimport { DarkTableHead, HighlightableRow, PaddedTable } from '../../../components/table'\nimport { HistoryPropType, ProfilePropType } from '../../../helper/profiles'\n\nconst RoundRow = ({ roundNum, round, onRevert }) => (<TableRow>\n    <TableCell align=\"center\" variant=\"head\">{roundNum + 1}</TableCell>\n    {round.playerLevels.map((level, i) => (<TableCell align=\"center\" key={i}>\n        <LevelDisplay level={level.level} active={level.active} />{round.leader === i && <sup>L</sup>}\n    </TableCell>))}\n    <TableCell align=\"center\">{round.score === undefined ? '-' : round.score}</TableCell>\n    {onRevert && <TableCell align=\"center\"><Button variant=\"outlined\" onClick={() => onRevert(roundNum)}>Revert</Button></TableCell>}\n</TableRow>)\n\nRoundRow.propTypes = {\n    roundNum: PropTypes.number.isRequired,\n    round: HistoryPropType.isRequired,\n    onRevert: PropTypes.func\n}\n\nconst PresentRoundRow = ({ players }) => (<HighlightableRow highlight={1}>\n    <TableCell align=\"center\" variant=\"head\">Now</TableCell>\n    {players.map(player => <TableCell align=\"center\" key={player.name}><LevelDisplay player={player} /></TableCell>)}\n    <TableCell></TableCell>\n</HighlightableRow>)\n\nPresentRoundRow.propTypes = {\n    players: PropTypes.arrayOf(PlayerPropType).isRequired,\n}\n\nconst GameHistory = ({ tableSize, profile }) => (\n    <TableContainer component={Paper} variant=\"outlined\">\n        <PaddedTable size={tableSize}>\n            <DarkTableHead>\n                <TableRow>\n                    <TableCell align=\"center\" color=\"inherit\">Round</TableCell>\n                    {profile.players.map(player => <TableCell key={player.name} align=\"center\">{player.name}</TableCell>)}\n                    <TableCell align=\"center\">Score</TableCell>\n                </TableRow>\n            </DarkTableHead>\n            <TableBody>\n                {profile.history.map((round, i) => <RoundRow key={i} round={round} roundNum={i} />)}\n                <PresentRoundRow players={profile.players} />\n            </TableBody>\n        </PaddedTable>\n    </TableContainer>\n)\n\nGameHistory.propTypes = {\n    profile: ProfilePropType,\n    tableSize: PropTypes.oneOf(['small', 'medium']).isRequired,\n}\n\nexport default GameHistory","import { Box, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport commonCls from '../../components/commonClasses'\nimport { LevelDisplay } from '../../components/levels'\nimport { PlayerPropType } from '../../components/player'\nimport formatList from '../../helper/formatList'\n\n\nconst fixedPlayerNameList = (players, teamId, leaderId) =>\n    players.map((player, i) => `${player.name}${(leaderId === i) ? ' (Leader)' : ''}`).filter((_, i) => (i % 2 === teamId))\n\nconst SimplePlayerStatus = ({ partnership, players, leader }) => {\n    const classes = commonCls()\n\n    if (partnership === 'floating') {\n        return (<>\n            <Typography variant=\"body2\">\n                {\n                    formatList(players.map(\n                        (player, i) => <span key={i}>{player.name} (<LevelDisplay player={player} />{i === leader ? ', Leader' : ''})</span>\n                    ))\n                }\n            </Typography>\n        </>)\n    } else {\n        return (<Box className={classes.vContainer}>\n            <Typography variant=\"body2\">\n                Team 1 (<LevelDisplay player={players[0]} />): {formatList(fixedPlayerNameList(players, 0, leader))}\n            </Typography>\n            <Typography variant=\"body2\">\n                Team 2 (<LevelDisplay player={players[1]} />): {formatList(fixedPlayerNameList(players, 1, leader))}\n            </Typography>\n        </Box>)\n    }\n\n}\n\n\nSimplePlayerStatus.propTypes = {\n    partnership: PropTypes.oneOf(['fixed', 'floating']).isRequired,\n    players: PropTypes.arrayOf(PlayerPropType).isRequired,\n    leader: PropTypes.number.isRequired\n}\n\nexport default SimplePlayerStatus","import PropTypes from 'prop-types'\nimport SimplePlayerStatus from '../subpages/calc/simplePlayerStatus'\n\nconst localStorageKey = 'shengji-helper-profiles'\n\nconst loadLevel = x => ({ level: x >> 1, active: (x & 0b1) === 0b1 })\n\nexport const loadProfiles = window => Object.fromEntries(\n    JSON.parse(window.localStorage.getItem(localStorageKey) || '[]')\n        .map(profile => [profile.uuid, {\n            name: decodeURIComponent(profile.name),\n            lastUsed: new Date(profile.lastUsed),\n            partnership: (profile.floating ? 'floating' : 'fixed'),\n            config: profile.config,\n            players: profile.players.map(player => ({ name: player[0], ...loadLevel(player[1]) })),\n            leader: profile.leader,\n            victors: profile.victors,\n            history: profile.history.map(\n                ([leader, score, ...levels]) => ({ leader, score, playerLevels: levels.map(loadLevel) })\n            )\n        }])\n)\n\nconst storeLevel = ({ level, active }) => (level << 1) | (active ? 0b1 : 0b0)\n\nexport const saveProfiles = (profiles, window) => {\n    window.localStorage.setItem(\n        localStorageKey,\n        JSON.stringify(Object.entries(profiles).map(([uuid, profile]) => ({\n            name: encodeURIComponent(profile.name),\n            uuid: uuid,\n            lastUsed: profile.lastUsed.valueOf(),\n            floating: (profile.partnership === 'floating' ? 1 : 0),\n            config: profile.config,\n            players: profile.players.map(\n                player => [player.name, storeLevel(player)]\n            ),\n            leader: profile.leader,\n            victors: profile.victors,\n            history: profile.history.map(\n                ({ leader, score, playerLevels }) => [leader, score, ...playerLevels.map(storeLevel)]\n            )\n        })))\n    )\n}\n\nexport const HistoryPropType = PropTypes.exact({\n    leader: PropTypes.number.isRequired,\n    score: PropTypes.number,\n    playerLevels: PropTypes.arrayOf(PropTypes.exact({\n        level: PropTypes.number.isRequired, active: PropTypes.bool.isRequired\n    })).isRequired\n})\n\nexport const ProfilePropType = PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    lastUsed: PropTypes.instanceOf(Date).isRequired,\n    partnership: PropTypes.oneOf(['fixed', 'floating']).isRequired,\n    players: SimplePlayerStatus.propTypes.players,\n    config: PropTypes.exact({\n        decks: PropTypes.number.isRequired,\n        perPlayer: PropTypes.number.isRequired,\n        spares: PropTypes.number.isRequired\n    }).isRequired,\n    leader: PropTypes.number.isRequired,\n    victors: PropTypes.arrayOf(PropTypes.number).isRequired,\n    history: PropTypes.arrayOf(HistoryPropType).isRequired\n})\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","const formatList = array => array.reduce((a, e) => (a === null ? [e] : [...a, ', ', e]), null)\nexport default formatList","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}